=================
Chapel doc README
=================

This directory contains the following documentation:

  README             : this file
  README.bugs        : how to report bugs or suggestions to the Chapel team
  README.building    : information about building the Chapel compiler
  README.chplenv     : setting up your environment to use Chapel
  README.compiling   : how to use the Chapel compiler to compile code
  README.executing   : execution options for Chapel programs
  README.launcher    : using a launcher to get Chapel execution started
  README.multilocale : how to use Chapel with multiple locales
  README.prereqs     : prerequisites for using Chapel
  README.threads     : explains how Chapel tasks are implemented using threads

  platforms/           : platform-specific notes:
    README.cx-linux    :  Cray CX1/CX1000 (TM) running Linux
    README.cygwin      :  Cygwin
    README.ibm         :  IBM
    README.macosx      :  Mac
    README.marenostrum :  MareNostrum (at BSC)
    README.sgi         :  SGI Altix
    README.xmt         :  Cray XMT (TM)
    README.xe-cle      :  Cray XE (TM) running CLE
                          (the Cray Linux Environment (TM))
    README.xt-cle      :  Cray XT (TM) running CLE

  chapelLanguageSpec.pdf : the current draft of the Chapel language
                           specification

  quickReference.pdf : a one-sheet, tri-fold overview of Chapel syntax
                       for quick reference

  technotes/                : technical notes about our implementation:
    README.comm-diagnostics :  tracking communication events
    README.dsi              :  requirements/guidelines on writing a domain map
    README.extern           :  calling external C routines
    README.firstClassFns    :  first-class functions
    README.format           :  value-to-string formatting
    README.gmp              :  a prototype GMP module
    README.local            :  the 'local' statement
    README.module_search    :  how modules are searched for to fulfill 'use's
    README.volatile         :  support for volatile types


--------------------
For more Information
--------------------

For additional information about Chapel, please refer to:

* "Parallel Programmability and the Chapel Language" by Bradford
  L. Chamberlain, David Callahan, and Hans P. Zima, published in the
  International Journal of High Performance Computing Applications,
  August 2007, 21(3): 291-312.

* Our website:

  http://chapel.cray.com/
