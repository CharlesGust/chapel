#
# Makefile.base: Defines general Makefile variables.  Set CHAPEL_ROOT
# before using
#

MAKEFLAGS = --no-print-directory

ifndef CHPL_MAKE_HOST_TARGET
CHPL_MAKE_HOST_TARGET = --host
endif

#
# determine what platform we're running on
#
include $(CHAPEL_ROOT)/make/Makefile.platform

ifndef CHPL_MAKE_COMPILER
include $(CHAPEL_ROOT)/make/Makefile.compiler
endif

ifndef CHPL_MAKE_TASKS
include $(CHAPEL_ROOT)/make/Makefile.tasks
endif

ifndef CHPL_MAKE_THREADS
include $(CHAPEL_ROOT)/make/Makefile.threads
endif

ifndef CHPL_MAKE_TIMERS
include $(CHAPEL_ROOT)/make/Makefile.timers
endif

ifndef CHPL_MAKE_COMM
include $(CHAPEL_ROOT)/make/Makefile.comm
endif

ifndef CHPL_MAKE_LAUNCHER
include $(CHAPEL_ROOT)/make/Makefile.launcher
endif

ifndef CHPL_MAKE_MEM
include $(CHAPEL_ROOT)/make/Makefile.mem
endif

#
# default CFLAGS, based on other settings
#
ifeq ($(DEBUG), 1)
CFLAGS += $(DEBUG_CFLAGS)
LDFLAGS += $(DEBUG_LFLAGS)
endif

ifeq ($(OPTIMIZE), 1)
CFLAGS += $(OPT_CFLAGS)
endif

ifeq ($(PROFILE), 1)
CFLAGS += $(PROFILE_CFLAGS)
LDFLAGS += $(PROFILE_LFLAGS)
endif


#
# Directories, files, and locations
#
THIRD_PARTY_DIR = $(CHAPEL_ROOT)/third-party

ARMCI_DIR = $(THIRD_PARTY_DIR)/armci
ARMCI_VERSION = GPCsockets
ARMCI_TARGET = $(shell $(ARMCI_DIR)/util/target.pl)
ARMCI_SRC_DIR = $(ARMCI_DIR)/armci-$(ARMCI_VERSION)
ARMCI_INSTALL_DIR = $(ARMCI_DIR)/armci-$(ARMCI_VERSION)
ARMCI_LIB_DIR = $(ARMCI_INSTALL_DIR)/lib/$(ARMCI_TARGET)


#
# GASNet stuff
#
# the gasnet version
GASNET_VERSION = 1.16.2
GASNET_SUBDIR = $(GASNET_ABS_DIR)/GASNet-$(GASNET_VERSION)
# determine the segment if the user hasn't specified onex
ifndef CHPL_GASNET_SEGMENT
ifeq ($(CHPL_MAKE_COMM_SUBSTRATE),portals)
CHPL_GASNET_SEGMENT = fast
else
CHPL_GASNET_SEGMENT = everything
endif
endif
# decide whether to do a debug or no-debug build
ifdef CHPL_COMM_DEBUG
CHPL_GASNET_DEBUG = debug
CHPL_GASNET_CFG_OPTIONS += --enable-debug
else
CHPL_GASNET_DEBUG = nodbg
endif

# directories
GASNET_DIR = $(THIRD_PARTY_DIR)/gasnet
GASNET_UNIQUE_SUBDIR = $(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_TARGET_COMPILER)/seg-$(CHPL_GASNET_SEGMENT)/$(CHPL_GASNET_DEBUG)
GASNET_INSTALL_SUBDIR = install/$(GASNET_UNIQUE_SUBDIR)
GASNET_BUILD_SUBDIR = build/$(GASNET_UNIQUE_SUBDIR)
GASNET_INSTALL_DIR = $(GASNET_DIR)/$(GASNET_INSTALL_SUBDIR)
GASNET_LIB_DIR = $(GASNET_INSTALL_DIR)/lib
GASNET_INC_MAKEFILE = $(GASNET_INSTALL_DIR)/include/$(CHPL_MAKE_COMM_SUBSTRATE)-conduit/$(CHPL_MAKE_COMM_SUBSTRATE)-par.mak

MPICH1_DIR = $(THIRD_PARTY_DIR)/mpich1
MPICH1_INSTALL_DIR = $(MPICH1_DIR)/install/$(CHPL_MAKE_TARGET_PLATFORM)
MPICH1_LIB_DIR = $(MPICH1_INSTALL_DIR)/lib
MPICH1_BIN_DIR = $(MPICH1_INSTALL_DIR)/bin

MEM_DLMALLOC_DIR = $(THIRD_PARTY_DIR)/dlmalloc
MEM_DLMALLOC_LIB_DIR = $(MEM_DLMALLOC_DIR)/lib/$(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_COMPILER)
MEM_DLMALLOC_INCLUDE_DIR = $(MEM_DLMALLOC_DIR)/include

PVM_VERSION = 3.4.6
PVM_DIR = $(THIRD_PARTY_DIR)/pvm
PVM_ROOT = $(PVM_DIR)/pvm-$(PVM_VERSION)/pvm3

OPENMPI_VERSION = 1.4.1
OPENMPI_BASE_DIR = $(THIRD_PARTY_DIR)/openmpi
OPENMPI_INSTALL_DIR = $(OPENMPI_BASE_DIR)/install/$(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_TARGET_COMPILER)
OPENMPI_BIN_DIR = $(OPENMPI_INSTALL_DIR)/bin

ifeq ($(CHPL_MAKE_COMM_MPI),openmpi)
MPI_BIN_DIR=$(OPENMPI_BIN_DIR)
MPIRUN_XTRA_OPTS=--mca\ mpi_yield_when_idle\ 1
else
MPI_BIN_DIR=$(MPICH1_BIN_DIR)
MPIRUN_XTRA_OPTS=
endif



NANOX_VERSION=e3a0ce4
NANOX_DIR=$(THIRD_PARTY_DIR)/nanox
NANOX_SUBDIR=$(NANOX_DIR)/nanox-$(NANOX_VERSION)
NANOX_UNIQUE_SUBDIR=$(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_TARGET_COMPILER)
NANOX_INSTALL_SUBDIR=install/$(NANOX_UNIQUE_SUBDIR)
NANOX_BUILD_SUBDIR=build/$(NANOX_UNIQUE_SUBDIR)
NANOX_INSTALL_DIR=$(NANOX_DIR)/$(NANOX_INSTALL_SUBDIR)
NANOX_BUILD_DIR=$(NANOX_DIR)/$(NANOX_LIB_DIR)
NANOX_INCLUDE_DIR=$(NANOX_INSTALL_DIR)/include/nanox
NANOX_LIB_DIR=$(NANOX_INSTALL_DIR)/lib
NANOX_LIB_DIR2=$(NANOX_LIB_DIR)/performance


#
# qthreads stuff
#
QTHREAD_VERSION=1.6
QTHREAD_DIR=$(THIRD_PARTY_DIR)/qthread
QTHREAD_SUBDIR=$(QTHREAD_DIR)/qthread-$(QTHREAD_VERSION)
QTHREAD_UNIQUE_SUBDIR=$(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_TARGET_COMPILER)
QTHREAD_INSTALL_SUBDIR=install/$(QTHREAD_UNIQUE_SUBDIR)
QTHREAD_BUILD_SUBDIR=build/$(QTHREAD_UNIQUE_SUBDIR)
QTHREAD_INSTALL_DIR=$(QTHREAD_DIR)/$(QTHREAD_INSTALL_SUBDIR)
QTHREAD_BUILD_DIR=$(QTHREAD_DIR)/$(QTHREAD_LIB_DIR)
QTHREAD_INCLUDE_DIR=$(QTHREAD_INSTALL_DIR)/include
QTHREAD_LIB_DIR=$(QTHREAD_INSTALL_DIR)/lib

#
# tcmalloc stuff
#
TCMALLOC_VERSION = 1.7
TCMALLOC_DIR=$(THIRD_PARTY_DIR)/tcmalloc
TCMALLOC_SUBDIR = $(TCMALLOC_DIR)/google-perftools-$(TCMALLOC_VERSION)
TCMALLOC_UNIQUE_SUBDIR=$(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_TARGET_COMPILER)
TCMALLOC_INSTALL_SUBDIR=install/$(TCMALLOC_UNIQUE_SUBDIR)
TCMALLOC_INSTALL_DIR=$(TCMALLOC_DIR)/$(TCMALLOC_INSTALL_SUBDIR)
TCMALLOC_BUILD_SUBDIR=build/$(TCMALLOC_UNIQUE_SUBDIR)
TCMALLOC_BUILD_DIR=$(TCMALLOC_DIR)/$(TCMALLOC_BUILD_SUBDIR)
TCMALLOC_SRC_DIR = $(TCMALLOC_SUBDIR)/src
TCMALLOC_INCLUDE_DIR = $(TCMALLOC_INSTALL_DIR)/include/google
TCMALLOC_INCLUDE2_DIR = $(TCMALLOC_BUILD_DIR)/src
TCMALLOC_LIB_DIR = $(TCMALLOC_INSTALL_DIR)/lib

#
# GMP stuff
#
GMP_VERSION=5.0.1
GMP_DIR=$(THIRD_PARTY_DIR)/gmp
GMP_SUBDIR=$(GMP_DIR)/gmp-$(GMP_VERSION)
GMP_UNIQUE_SUBDIR=$(CHPL_MAKE_TARGET_PLATFORM)-$(CHPL_MAKE_TARGET_COMPILER)
GMP_INSTALL_SUBDIR=install/$(GMP_UNIQUE_SUBDIR)
GMP_BUILD_SUBDIR=build/$(GMP_UNIQUE_SUBDIR)
GMP_INSTALL_DIR=$(GMP_DIR)/$(GMP_INSTALL_SUBDIR)
GMP_BUILD_DIR=$(GMP_DIR)/$(GMP_LIB_DIR)
GMP_INCLUDE_DIR=$(GMP_INSTALL_DIR)/include
GMP_LIB_DIR=$(GMP_INSTALL_DIR)/lib

#
# how to make a platform-specific subdirectory
#

default: all

printplatform:
	@echo "for $(CHPL_MAKE_HOST_TARGET)..."
	@echo "CHPL_MAKE_PLATFORM        = $(CHPL_MAKE_PLATFORM)"
	@echo "CHPL_MAKE_HOST_PLATFORM   = $(CHPL_MAKE_HOST_PLATFORM)"
	@echo "CHPL_MAKE_TARGET_PLATFORM = $(CHPL_MAKE_TARGET_PLATFORM)"
	@echo "CHPL_MAKE_COMPILER        = $(CHPL_MAKE_COMPILER)"
	@echo "CHPL_MAKE_THREADS         = $(CHPL_MAKE_THREADS)"
	@echo "CHPL_MAKE_TIMERS          = $(CHPL_MAKE_TIMERS)"
	@echo "CHPL_MAKE_COMM            = $(CHPL_MAKE_COMM)"
	@echo "CHPL_MAKE_COMM_SUBSTRATE  = $(CHPL_MAKE_COMM_SUBSTRATE)"    
	@echo "CHPL_MAKE_LAUNCHER        = $(CHPL_MAKE_LAUNCHER)"
	@echo "CHPL_MAKE_MEM             = $(CHPL_MAKE_MEM)"

#
# use: make print-X to print the value of the variable X
#
print-%: ; @echo $* is $($*)

#
# OBJ_SUBDIR_MADE creates either a directory or a symbolic link,
# depending on how CHPLDEVTMP is set -- well, actually it creates a
# timestamp file (OBJ_SUBDIR_TIMESTAMP) so that the varying time
# stamps of directories don't cause things to rebuild indiscriminately.
# OBJ_SUBDIR is the actual directory.  OBJ_SUBDIR_SAFESLASH
# is the directory with slashes escaped appropriately for use in
# Makefile command rules.
#
GEN_SUBDIR = gen
PLAT_COMPILER_SUBDIR = $(CHPL_MAKE_HOST_PLATFORM)/$(CHPL_MAKE_COMPILER)
OBJ_SUBDIR = $(GEN_SUBDIR)/$(PLAT_COMPILER_SUBDIR)
OBJ_SUBDIR_TIMESTAMP = $(OBJ_SUBDIR)/.timestamp
OBJ_SUBDIR_MADE = $(OBJ_SUBDIR_TIMESTAMP)
OBJ_SUBDIR_SAFESLASH = $(subst /,\\/, $(OBJ_SUBDIR))

%/.timestamp:
	@echo making $* subdirectory to store platform-specific files
	@mkdir -p $*
	@-touch $*/.timestamp

COMM_SUBSTRATE_SUBDIR = comm-$(CHPL_MAKE_COMM)$(CHPL_MAKE_COMM_EXTRAS)/substrate-$(CHPL_MAKE_COMM_SUBSTRATE)
COMM_TASK_THREAD_SUBDIR = $(COMM_SUBSTRATE_SUBDIR)/tasks-$(CHPL_MAKE_TASKS)/threads-$(CHPL_MAKE_THREADS)
COMM_LAUNCH_SUBDIR = $(COMM_SUBSTRATE_SUBDIR)/launch-$(CHPL_MAKE_LAUNCHER)
PLAT_RUNTIME_SUBDIR = $(CHPL_MAKE_TARGET_PLATFORM)/$(CHPL_MAKE_COMPILER)
RUNTIME_OBJ_SUBDIR = $(GEN_SUBDIR)/$(PLAT_RUNTIME_SUBDIR)
RUNTIME_OBJDIR = $(RUNTIME_OBJ_SUBDIR)/$(COMM_TASK_THREAD_SUBDIR)
LAUNCHER_OBJDIR = $(RUNTIME_OBJ_SUBDIR)/$(COMM_LAUNCH_SUBDIR)
LIB_RT_DIR = lib/$(PLAT_RUNTIME_SUBDIR)/$(COMM_TASK_THREAD_SUBDIR)
LIB_LN_DIR = lib/$(PLAT_RUNTIME_SUBDIR)/$(COMM_LAUNCH_SUBDIR)


CHPL_BIN_DIR = $(CHAPEL_ROOT)/bin/$(CHPL_MAKE_HOST_PLATFORM)
CHPL = $(CHPL_BIN_DIR)/chpl$(EXE_SUFFIX)


#
# default tools
# 
ifndef CHPL_TAGS_UTIL
ifeq ($(CHPL_EDITOR),vim)
CHPL_TAGS_UTIL = ctags
CHPL_TAGS_FLAGS := -w
CHPL_TAGS_FILE = tags
CHPL_TAGS_APPEND_FLAG = -a
else
CHPL_TAGS_UTIL = etags
CHPL_TAGS_FILE = TAGS
CHPL_TAGS_APPEND_FLAG = -a
endif
endif

# non-portable means to handle flags_list.h as well
#CHPL_TAGS_FLAGS += --regex='/symbolFlag(\s-*\(FLAG[a-zA-Z0-9_]+\)/\1/'


#
# echo to use with the -n option
#
ECHO = echo


#
# by default, no executable suffix
#
EXE_SUFFIX = 


#
# include compiler- and platform-specific settings
#
-include $(CHAPEL_ROOT)/make/compiler/Makefile.$(CHPL_MAKE_COMPILER)
-include $(CHAPEL_ROOT)/make/platform/Makefile.$(CHPL_MAKE_PLATFORM)
-include $(CHAPEL_ROOT)/make/comm/Makefile.$(CHPL_MAKE_COMM)
-include $(CHAPEL_ROOT)/make/tasks/Makefile.$(CHPL_MAKE_TASKS)
