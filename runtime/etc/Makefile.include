CHPL_MAKE_HOST_TARGET = --target
include $(CHAPEL_ROOT)/make/Makefile.base

LD = $(CC)

include $(CHAPEL_ROOT)/runtime/etc/Makefile.threads-$(CHPL_MAKE_THREADS)
-include $(CHAPEL_ROOT)/runtime/etc/Makefile.tasks-$(CHPL_MAKE_TASKS)
include $(CHAPEL_ROOT)/runtime/etc/Makefile.comm-$(CHPL_MAKE_COMM)
include $(CHAPEL_ROOT)/runtime/etc/Makefile.mem-$(CHPL_MAKE_MEM)
include $(CHAPEL_ROOT)/runtime/etc/Makefile.stm-$(CHPL_MAKE_STM)

GEN_CFLAGS += -DCHPL_TASKS=$(CHPL_MAKE_TASKS_UBAR) \
              -DCHPL_TASKS_H=\"tasks-$(CHPL_MAKE_TASKS).h\" \
              -DCHPL_THREADS=$(CHPL_MAKE_THREADS_UBAR) \
              -DCHPL_THREADS_H=\"threads-$(CHPL_MAKE_THREADS).h\" \
              -DCHPL_STM_H=\"stm-$(CHPL_MAKE_STM).h\"
	   	
#
# We always search the include/threads-generic subdir, even when our
# threading model doesn't use generic threading.  This doesn't hurt
# anything, since if generic threading isn't used we won't #include
# the only file in that subdir anyway.
#
CHAPEL_RT_INC_DIR = \
	$(CHAPEL_ROOT)/runtime/include/tasks/$(CHPL_MAKE_TASKS) \
	-I$(CHAPEL_ROOT)/runtime/include/threads/$(CHPL_MAKE_THREADS) \
	-I$(CHAPEL_ROOT)/runtime/include/threads-generic \
	-I$(CHAPEL_ROOT)/runtime/include/comm/$(CHPL_MAKE_COMM) \
	-I$(CHAPEL_ROOT)/runtime/include/comp-$(CHPL_MAKE_COMPILER) \
	-I$(CHAPEL_ROOT)/runtime/include/stm/$(CHPL_MAKE_STM) \
	-I$(CHAPEL_ROOT)/runtime/include/$(subst -sim,,$(CHPL_MAKE_TARGET_PLATFORM)) \
	-I$(CHAPEL_ROOT)/runtime/include
CHAPEL_RT_LIB_DIR = $(CHAPEL_ROOT)/$(LIB_RT_DIR)

ifdef NVCC
TMPBINNAME_GPU=$(TMPBINNAME).gpu
endif

all: $(CHPL_CL_OBJS) FORCE
	$(CC) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS) -c -o $(TMPBINNAME).o -I$(CHAPEL_RT_INC_DIR) -I. $(CHPLSRC)
ifdef NVCC
	$(NVCC) $(RUNTIME_CUDA_CFLAGS) -c -o $(TMPBINNAME_GPU).o -I$(CHAPEL_RT_INC_DIR) -I. $(CHPL_GPU_SRC)
	$(LD) $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) -o $(TMPBINNAME) -L$(CHAPEL_RT_LIB_DIR) $(TMPBINNAME).o $(TMPBINNAME_GPU).o $(CHAPEL_RT_LIB_DIR)/main.o $(CHPL_CL_OBJS) -lchpl -lm $(LIBS)
else
	$(LD) $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) -o $(TMPBINNAME) -L$(CHAPEL_RT_LIB_DIR) $(TMPBINNAME).o $(CHAPEL_RT_LIB_DIR)/main.o $(CHPL_CL_OBJS) -lchpl -lm $(LIBS)
endif

ifneq ($(CHPL_MAKE_LAUNCHER),none)
	$(MAKE) -f $(CHAPEL_ROOT)/runtime/etc/Makefile.launcher all CHAPEL_ROOT=$(CHAPEL_ROOT) TMPBINNAME=$(TMPBINNAME) BINNAME=$(BINNAME) TMPDIRNAME=$(TMPDIRNAME)
endif
	cp $(TMPBINNAME) $(BINNAME)
	rm $(TMPBINNAME)
	$(TAGS_COMMAND)

FORCE:
