# USAGE:
#
# Current notes on triage results, sorted into the following categories:
#
# * cases that are assigned and should be fixed (ideally during the coming
#   week)
#
# * cases that are causing noise regularly in testing, sorted by
#   approximate priority
#
# * cases that were once flagged as causing regular noise, but don't seem
#   so bad currently
#
# * cases that are not familiar, but have caused noise -- these are
#   noted so that if they happen again, we can move them up to an
#   earlier session and recognize a slower pattern over a longer
#   period of time
#
# * regular failures that someone might look at as part of their triage week
#
# The path to each test with intermittent behavior should appear here, so
# it can be grepped for. Except if a lot of test fail for the identical
# reason or in the same directory, a wildcard is more appropriate.
# The convention here is to include just the path, without test/ or .chpl.
# The date of the most recent note is also useful, with "ongoing"
# if appropriate.


=========================================================
Problems analyzed and assigned that should be fixed soon:
=========================================================

cray-prgenv-cray (weekday) (sungeun 6/7/13): Two link errors caused
all tests to fail.  "cannot find -lsci_cray_mp" and "cannot find
-lscicpp_cray".

cray-prgenv-gnu (weekday) (sungeun 6/5/13): PrgEnv-gnu failed with
"ERROR: gcc/48 does not support mpich2/5.6.5. Please swap gcc or
mpich2 versions".  After a couple of iterations with Ryan, committed a
fix that should swap in the correct mpich version.  We should consider
making chplbld01 and chpbld02 behave similarly.  According to Ryan,
chplbld01 is begin treated like an XT white box (at our
request?). There are no longer XT PE updates, and this may be periodic
module woes.

xmt (6/7/13, 6/10/13):
[Error: Timed out compilation for release/examples/benchmarks/lulesh/lulesh (compopts: 1)]
[Error: Timed out compilation for release/examples/benchmarks/lulesh/lulesh (compopts: 2)]



==============================================
These things regularly cause noise in testing:
==============================================

building compiler with PGI fails
--------------------------------
The PGI compiler version was upated to 13.3.0 and now gets an internal
error while compiling functionResolution.cpp.  Backing up to version
12.9.0 fixes it. Backing the Chapel source down to revision 20834 also
fixes it.  Turning optimization down to -O1 also fixes it.  Bugzilla
bug 796017.


atomics nondeterminisms (sungeun)
---------------------------------
release/examples/primers/atomics:
- xt-intel: 06/30/12, 3/19/13
- linux32: 07/04/12
- cray-xt: 08/14/12
- prgenv-gnu: 3/22/13
types/atomic/sungeun/atomic_vars:
- gasnet-everything, 02/01/13, 02/19/13, 05/10/13
- no-local:3/16/13
- baseline:6/7/13


linux64.gnu.gasnet.qthreads.none (UNASSIGNED)
---------------------------------------------
Our main noisy failures currently are as follows:

  distributions/robust/arithmetic/kernels/jacobi.chpl
  distributions/robust/arithmetic/stress/test_many_array
  distributions/robust/arithmetic/stress/test_many_domains

I don't know that it's worth tracking when these pass fail currently.
Greg looked into the execution times and found that the problem is
that their execution time is very close to the timeout and
significantly longer than fifo.  Dylan and Brad looked into the cause
and narrowed it down to privatization (e.g., if all lines other than
the domain declarations are removed from test_many_domains, the
execution time is still very high and close to the timeout), but have
not yet gotten further than that to determine what the problem is --
e.g., a busy-wait loop, excess communication, slow handling of active
messages due to not having a thread per task as in fifo, or ...?

I've deleted historical notes on this entry that seem less useful
at present.  See the archives for more detail.


==============================================================================
Were once flagged as causing noise regularly, but not as familiar as the above
==============================================================================


SSCA2_main (UNASSIGNED)
-----------------------
Periodically times out for PGI (alternates between time out and stack
overflow error documented in REGRESSIONS)


TooManyThreads (UNASSIGNED)
---------------------------
Fails periodically.  Lately observed pthreads.tcmalloc (2012/08/15).


compflags/ferguson/sub_test
---------------------------
chpbld02 has /tmp mounted on /ptmp.  The path search in findProgramPath appears
to be finding chpl in /ptmp instead of /tmp even though the /ptmp directory
it is finding is not in path. The /ptmp path it is finding is actually the
same directory as the /tmp directory it is looking for.


==========================================================================
Not so noisy as to be familiar annoyances, but worth noting to see if they
come up again
==========================================================================

libmpich_intel.so failure for
cray-xt.cray-prgenv-intel.none.fifo.pthreads--linux64 (May 27, 2013)
> ld: warning: libmpich_intel.so.1, needed by /opt/cray/libsci/12.0.02/intel/130/istanbul/lib/libsci_intel_mp.so, not found (try using -rpath or -rpath-link)
--------------------------------------------------------------------
[Error matching compiler output for link/sungeun/static_dynamic (compopts: 4)] 
[Error matching compiler output for link/sungeun/static_dynamic (compopts: 5)] 


undiagnosed cygwin failures
---------------------------
[Error matching compiler output for release/examples/spec/Data_Parallelism/promotion] (4/11/13)
[Error matching compiler output for release/examples/spec/Modules/init] (4/11/13)
[Error matching program output for release/examples/programs/jacobi] (4/14/13)


incorrect answer suggestive of a --no-local race : iteration terminated
too early or too late (?)
-----------------------------------------------------------------------
studies/jacobi/waynew/example2 (02/26/13)

intermittent valgrind error
---------------------------
- studies/madness/aniruddha/madchap/mytests/par-compress/test_compress
(compopts: 1) (02/26/13)

- studies/madness/aniruddha/madchap/mytests/par-refine/test_refine (compopts: 1)
Got wrong answer for F3.norm2() on 10/29/12, 01/14/13.
As of 2/4/2013, those are the only times the test ran with compopts: 1.
The other times it ran without compopts:1 and succeeded.
- studies/madness/aniruddha/madchap/mytests/par-reconstruct/test_reconstruct
Various numeric discrepancies, first occurred on 9/15/2012 or before.
- release/examples/primers/chpldoc (compopts: 1)  (8/28/2012, 9/07/2012, 9/11/2012, 02/25/13)
This is not a problem with chpldocs (should file a separate future).
There is an intermittent compile-time segfault during cullOverReferences.
The type of Bar.super is at least partially corrupt at that point.

"that wasn't very random looking"
---------------------------------
[Error matching program output for modules/standard/Random/diten/testRandomSeed]
linux64.gnu.none.fifo.pthreads (2/4/2013)
other configurations are quite consistent - see REGRESSIONS

prgenv-* compilation timeouts (maybe due to system updates or ...?)
-------------------------------------------------------------------
[Error: Timed out compilation for users/ferguson/ddata/f] (prgenv-pgi: 12/01/12)
[Error: Timed out compilation for users/jglewis/locClassSegFault-nongeneric] (prgenv-pgi: 12/01/12)
[Error: Timed out compilation for release/examples/spec/Tuples/expansion] (prgenv-cray: 12/02/12)
[Error: Timed out compilation for distributions/dm/t5a] (prgenv-intel: 12/03/12)

occasional segfault on reports tests for prgenv-pgi
---------------------------------------------------
[Error matching program output for parallel/cobegin/stonea/reports (execopts: 3)]  (04/13/13)
[Error matching program output for parallel/cobegin/stonea/reports (execopts: 4)] (12/01/12, 04/13/13)


studies/dijkstra/driverEdgeBtw
------------------------------
PGI only.  Floating point overflow warning in generated code
(03/12/11, 9/14/12) Also documented in REGRESSIONS file.

parallel/cobegin/diten/cobeginRace (UNASSIGNED)
----------------------------------------------------
"timedexec died with signal 11" - pgi compiler (06/18/12)
unknown cause - baseline (06/17/12)

timeout studies/shootout/fannkuch-redux/fannkuch-redux (UNASSIGNED)
-------------------------------------------------------------------
under cray-xt.cray-prgenv-gnu.none.fifo.pthreads--linux64.gnu (3/22/13)

non-deterministic timeouts with gasnet (UNASSIGNED)
---------------------------------------------------
The following configurations are affected:
 linux64.gnu.gasnet.qthreads.none
 linux64.gnu.gasnet.fifo.pthreads.tcmalloc
 linux64.gnu.gasnet-fast.fifo.pthreads.dlmalloc
 linux64.gnu.gasnet-everything.fifo.pthreads
examples of what times out:
 distributions/robust/arithmetic/kernels/jacobi (still timing out 5/5/13)
 distributions/nelson/MultiBlockDist2DLocales (maybe resolved?)
 distributions/robust/arithmetic/modules/test_module_Sort (maybe resolved?)
 distributions/robust/arithmetic/stress/test_many_domains (08/13)
 distributions/robust/arithmetic/stress/test_many_array (4/29/13)
 distributions/dm/t2 (2012/08/15)
 test_array_slicing3 (06/08/12, 6/16, 3/29/13, 5/3/13)
 release/examples/benchmarks/lulesh/lulesh (compopts: 2, execopts: 4) (04/08/13)
 etc.

minus_equals nondeterminism (sungeun)
----------------------------------------
(week of 07/02, still present 10/2, 10/9/12, 1/6/13, 2/1/13)

NOTES: This is a race condition that is present in the case of *all*
iteration of val iterators (e.g. domains) where the index is passed to
a function for promotion.  The reason we don't run into this more
often is because the window for races is typically very small (usually
between 2 lines of the generated code), and it's slightly larger for
--no-local for associative arrays promoted remove().  The index
variable needs to be declared outside the scope of the promoted
function so that it can be referred to.  After the iterators are
lowered, during the parallel pass, coforall blocks are converted to
nested functions that are then flattened.  The index var is an "outer
var" (declared in the outer scope), and thus is is passed by reference
to the newly unnested functions.  But because it is the index
variable, the iterator overwrites it anyways.  In the case of the var
iterator, it simply overwrites the reference with another reference.
In the case of the val iterator, it write the actual value.  Since all
tasks performing the coforall share the same memory location passed in
from the promotion wrapper,


no-local nondeterminisms (UNASSIGNED)
-------------------------------------
cg-sparse-timecomp (06/05/12)
studies/ssca2/atomic/SSCA2_main_atomic (07/04/12)

non-deterministic compilation timeouts (04/09/13)
-------------------------------------------------
linux64.gnu.none.fifo.pthreads (baseline: 4/9/13
[Error: Timed out compilation for types/file/unableToOpenFile] 
linux64.gnu.none.fifo.pthreads.tcmalloc: 4/9/13
[Error: Timed out compilation for studies/hpcc/RA/bradc/ra-iter] 

tcmalloc failures (08/08/12)
----------------------------
[Error: Timed out executing program distributions/robust/arithmetic/kernels/hpl (compopts: 1)]
[Error: Timed out executing program distributions/robust/arithmetic/kernels/jacobi]
[Error: Timed out executing program distributions/robust/arithmetic/modules/test_module_Sort]

nondet. tmalloc failures
------------------------
[Error: Timed out executing program distributions/robust/arithmetic/stress/test_many_domains] (08/08/12)
[Error matching program output for studies/nqueens/nqueens-2-par] (sYSMALLOc assertion failure in malloc.c:3091 - linux64.gnu.none.fifo.pthreads.tcmalloc - 11/15/12)

parallel/begin/deitz/test_big_recursive_begin future succeeded
--------------------------------------------------------------
*-linux64.gnu.none.fifo.pthreads (10/10/12, 10/16/12)
*-linux64.gnu.none.fifo.pthreads-std.log (8/18,9/2,9/9,9/13/12, 10/17/12)
*-linux64.gnu.none.fifo.pthreads-npt.log (baseline)
  (9/{4,5,14,22,30}/12)
  (10/2/12)
120821/Nightly-day2-Tue-linux64.gnu.none.fifo.pthreads-nlc.log

studies/sudoku/dinan/sudoku
---------------------------
[Error: Timed out executing program studies/sudoku/dinan/sudoku] (cray-xt.cray-prgenv-gnu.none.fifo.pthreads--linux64.gnu 11/16/12, 11/26/12)

distributions/robust/arithmetic/performance/reduceAlias
-------------------------------------------------------
Timed out compilation - only on 5/17/2013, but a few other tests
time out in compilation for the same configurations:
 linux64.gnu.gasnet.fifo.pthreads.tcmalloc
 linux64.gnu.gasnet.fifo.pthreads

===========================================
Not noisy, but need some attention sometime
===========================================

types/range/hilde/align64
-------------------------
This test gets a false positive pass on intel and pgi it seems, for
reasons that are not clear to me (i.e., why are they behaving differently
than gcc?).  If the future should remain, a .skipif should be added to
skip it in these cases.
 
I wouldn't call the future a bug so much as a 'feature request' or
'semantic' future -- it suggests a change in the language definition
that should be considered and agreed upon rather than reflecting a way
in which the compiler is incorrect w.r.t. the language definition (as
I understand it.

cray-xt.cray-xt-cray.none.fifo.pthreads
--------------------------------------
The following compiler segfaults(?) appeared only once on 9/28/12
[Error matching compiler output for release/examples/primers/opaque]
[Error matching compiler output for release/examples/spec/Generics/fillTuple2]
[Error matching compiler output for release/examples/spec/Iterators/as-arrays]
[Error matching compiler output for release/examples/spec/Ranges/alignedNegStride]

cray-xt.cray-prgenv-cray.none.fifo.pthreads
--------------------------------------
[Error: Timed out compilation for studies/ssca2/test-rmatalt/nondet (compopts: 1)] (5/4/13, 6/9/13)

