bug: privatized array is not local within on-clauses

Here is a rephrase of the issue:

Say I have a privatized array A that gets passed to the following function:

proc test(aa) {
  // say we are on Locales(0) here
  on Locales(1) {
    local {
      ... aa(1) ...
    }
  }
}

In the generated code, 'aa' is an int (just like it should be).
However, the 'on' clause is treating this as an int variable, so it wraps
it in a wide reference. The result is that 'local' fails because the
reference to 'aa' is an access to a non-local int variable.

My suggested solution is: treat the int as a const, not a variable.
(Assuming that if it is a constant, the compiler will pass it to
the on-clause as an int constant, rather than as a wide reference
to an int variable.)

Sung says: "Brad and I had talked about adding a "this is local" flag that we
could use more generally (at the time wrt externs), that would always
treat certain variables as "local" (i.e., no wide reference), and I
think that this should probably fall into that category rather than be
special cased.  maybe.."

Brad suggested pushing this off for the moment.
