#!/usr/bin/env python

#
# Allow 5% variance for Kernel 4 communication counts
#

import sys, os

if os.getenv('CHPL_COMM')==None or os.getenv('CHPL_COMM')=='none':
    # do nothing for comm none
    sys.exit(0)

if len(sys.argv) < 3:
    sys.stdout.write('usage: '+sys.argv[0]+' testname logfile');
    sys.exit(-1)

#
# Latest approximate communication counts
#
commTypes = ['get', 'get_nb', 'get_nb_test', 'get_nb_wait', 'put', 'fork', 'fork_fast', 'fork_nb']
l0 = [74223, 0, 0, 0, 4600, 9038, 0, 807]
l1 = [94952, 0, 0, 0, 4722, 9524, 0, 786]
l2 = [83820, 0, 0, 0, 4238, 8639, 0, 774]
l3 = [87570, 0, 0, 0, 4340, 8570, 0, 756]
counts = [l0, l1, l2, l3]

logfile = sys.argv[2]

f=open(logfile, 'r')
lines = f.readlines()
f.close()

tmpfile=logfile+'.tmp'
f=open(tmpfile, 'w')
for l in lines:
    if l.find('Kernel 4: (')==0:
        f.write('Kernel 4:\n')
        ldata = l[10:].split(')')
        # for each locale's data
        for i in range(4):
            commDiags=ldata[i][1:].split(',')
            for d in range(8):
                target = counts[i][d]
                curr=int(commDiags[d].split('=')[1].strip())
                # only gets, puts and forks should vary
                if d==0 or d==4 or d==5:
                    err=int(0.01*float(target)) # truncates
                    if (curr>=target-err) and (curr<=target+err):
                        f.write('%d: %s: %d (~1%%)\n'%(i, commTypes[d], target))
                    else:
                        f.write('%d: %s: %d (expected %d ~1%%)\n'%(i, commTypes[d], curr, target))
                else:
                    # zero counts must match exactly
                    f.write('%d: %s: %d\n'%(i, commTypes[d], curr))
            
                
    else:
        # write out the line as is
        f.write(l)

f.close()

os.rename(tmpfile, logfile)
