This is starpu.info, produced by makeinfo version 4.13 from starpu.texi.

Copyright (C) 2009-2011  Universite' de Bordeaux 1

Copyright (C) 2010, 2011, 2012  Centre National de la Recherche
Scientifique

Copyright (C) 2011, 2012 Institut National de Recherche en Informatique
et Automatique

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".

INFO-DIR-SECTION Development
START-INFO-DIR-ENTRY
* StarPU: (starpu).             StarPU Handbook
END-INFO-DIR-ENTRY


Indirect:
starpu.info-1: 810
starpu.info-2: 294863

Tag Table:
(Indirect)
Node: Top810
Node: Introduction2886
Node: Motivation3141
Node: StarPU in a Nutshell4224
Node: Codelet and Tasks5962
Node: StarPU Data Management Library7534
Node: Glossary8187
Node: Research Papers10500
Node: Installing StarPU10850
Node: Downloading StarPU11267
Node: Getting Sources11474
Ref: Getting Sources-Footnote-112195
Node: Optional dependencies12412
Node: Configuration of StarPU12885
Node: Generating Makefiles and configuration scripts13176
Node: Running the configuration13723
Node: Building and Installing StarPU14063
Node: Building14306
Node: Sanity Checks14447
Node: Installing14734
Node: Using StarPU15116
Node: Setting flags for compiling and linking applications15411
Ref: Setting flags for compiling and linking applications-Footnote-116531
Node: Running a basic StarPU application16736
Node: Kernel threads started by StarPU17705
Node: Enabling OpenCL18550
Node: Basic Examples19435
Node: Compiling and linking options19829
Node: Hello World20971
Node: Hello World using the C Extension21416
Node: Hello World using StarPU's API22924
Node: Required Headers23323
Node: Defining a Codelet23578
Node: Submitting a Task26141
Node: Execution of Hello World29627
Node: Vector Scaling Using the C Extension30036
Ref: Vector Scaling Using the C Extension-Footnote-133478
Node: Adding an OpenCL Task Implementation33613
Node: Adding a CUDA Task Implementation36679
Node: Vector Scaling Using StarPu's API38717
Node: Source Code of Vector Scaling39306
Node: Execution of Vector Scaling43554
Node: Vector Scaling on an Hybrid CPU/GPU Machine43962
Node: Definition of the CUDA Kernel44482
Node: Definition of the OpenCL Kernel45959
Node: Definition of the Main Code48358
Node: Execution of Hybrid Vector Scaling51596
Node: Advanced Examples52967
Node: Using multiple implementations of a codelet53554
Node: Enabling implementation according to capabilities55040
Node: Task and Worker Profiling58505
Node: Partitioning Data60973
Node: Performance model example63390
Node: Theoretical lower bound on execution time69226
Node: Insert Task Utility71915
Node: Data reduction77196
Node: Parallel Tasks80240
Node: Debugging85979
Node: The multiformat interface86407
Node: On-GPU rendering89502
Node: More examples90804
Node: Performance optimization92016
Node: Data management92735
Node: Task granularity95011
Node: Task submission95675
Node: Task priorities96234
Node: Task scheduling policy96816
Node: Performance model calibration99048
Node: Task distribution vs Data transfer101940
Node: Data prefetch103100
Node: Power-based scheduling104201
Node: Profiling105580
Node: CUDA-specific optimizations106470
Node: Performance debugging107329
Node: Performance feedback108943
Node: On-line109346
Node: Enabling monitoring109837
Node: Task feedback110751
Node: Codelet feedback111965
Node: Worker feedback112411
Node: Bus feedback113723
Node: StarPU-Top114583
Ref: StarPU-Top-Footnote-1117409
Node: Off-line117468
Node: Generating traces117885
Node: Gantt diagram119260
Node: DAG120075
Node: starpu-workers-activity120657
Node: Codelet performance122145
Node: Theoretical lower bound on execution time API124226
Node: Tips and Tricks126242
Node: Per-worker library initialization126529
Node: StarPU MPI support128527
Node: The API129548
Node: Simple Example135603
Node: MPI Insert Task Utility137611
Node: MPI Collective Operations144747
Node: StarPU FFT support147512
Node: C Extensions152026
Ref: C Extensions-Footnote-1153690
Node: Defining Tasks154146
Node: Synchronization and Other Pragmas160589
Node: Registered Data Buffers161539
Node: Conditional Extensions164079
Ref: Conditional Extensions-Footnote-1167539
Node: SOCL OpenCL Extensions167622
Node: StarPU Basic API168359
Node: Initialization and Termination169187
Node: Workers' Properties175750
Node: Data Library181035
Node: Introduction to Data Library181526
Node: Basic Data Library API183208
Node: Access registered data from the application190122
Node: Data Interfaces193196
Node: Registering Data193412
Node: Accessing Data Interfaces198055
Node: Accessing Handle199100
Node: Accessing Variable Data Interfaces199958
Node: Accessing Vector Data Interfaces200732
Node: Accessing Matrix Data Interfaces202330
Node: Accessing Block Data Interfaces204733
Node: Accessing BCSR Data Interfaces207656
Node: Accessing CSR Data Interfaces209984
Node: Data Partition212458
Node: Basic API212673
Ref: starpu_data_partition214423
Node: Predefined filter functions216992
Node: Partitioning BCSR Data217494
Node: Partitioning BLAS interface218199
Node: Partitioning Vector Data218902
Node: Partitioning Block Data220396
Node: Codelets and Tasks220813
Ref: starpu_display_codelet_stats243670
Node: Explicit Dependencies243846
Node: Implicit Data Dependencies248461
Node: Performance Model API250312
Ref: struct starpu_perfmodel251846
Node: Profiling API257323
Node: CUDA extensions263791
Node: OpenCL extensions266355
Node: Writing OpenCL kernels267083
Node: Compiling OpenCL kernels268590
Ref: starpu_opencl_load_opencl_from_file269706
Node: Loading OpenCL kernels270189
Node: OpenCL statistics270874
Node: OpenCL utilities271437
Node: Cell extensions274627
Node: Miscellaneous helpers274810
Node: StarPU Advanced API276609
Node: Defining a new data interface276952
Node: Data Interface API277265
Ref: struct starpu_data_interface_ops277487
Node: An example of data interface283007
Node: Multiformat Data Interface287132
Node: Task Bundles289185
Node: Task Lists290868
Node: Using Parallel Tasks292802
Node: Defining a new scheduling policy294429
Node: Scheduling Policy API294863
Node: Source code304021
Node: Expert mode304594
Node: Configuring StarPU305174
Node: Compilation configuration305463
Node: Common configuration305819
Node: Configuring workers306411
Node: Advanced configuration308951
Node: Execution configuration through environment variables311617
Node: Workers312205
Node: STARPU_NCPUS312851
Node: STARPU_NCUDA313276
Node: STARPU_NOPENCL313800
Node: STARPU_NGORDON314072
Node: STARPU_WORKERS_NOBIND314347
Node: STARPU_WORKERS_CPUID314755
Node: STARPU_WORKERS_CUDAID316295
Node: STARPU_WORKERS_OPENCLID317081
Node: Scheduling317527
Node: STARPU_SCHED318014
Node: STARPU_CALIBRATE318387
Node: STARPU_PREFETCH318958
Node: STARPU_SCHED_ALPHA319586
Node: STARPU_SCHED_BETA320034
Node: Misc320459
Node: STARPU_SILENT320948
Node: STARPU_LOGFILENAME321251
Node: STARPU_FXT_PREFIX321549
Node: STARPU_LIMIT_GPU_MEM321898
Node: STARPU_GENERATE_TRACE322518
Node: Full source code for the 'Scaling a Vector' example322901
Node: Main application323261
Node: CPU Kernel327653
Node: CUDA Kernel330090
Node: OpenCL Kernel331246
Node: Invoking the kernel331463
Node: Source of the kernel333521
Node: GNU Free Documentation License333896
Node: Concept Index359105
Node: Function Index360067
Node: Datatype Index395393

End Tag Table
