This is ../../doc/starpu.info, produced by makeinfo version 4.13 from
../../doc/starpu.texi.

Copyright (C) 2009-2011  Universite' de Bordeaux 1

Copyright (C) 2010, 2011, 2012  Centre National de la Recherche
Scientifique

Copyright (C) 2011, 2012 Institut National de Recherche en Informatique
et Automatique

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".

INFO-DIR-SECTION Development
START-INFO-DIR-ENTRY
* StarPU: (starpu).             StarPU Handbook
END-INFO-DIR-ENTRY


Indirect:
starpu.info-1: 830
starpu.info-2: 299371

Tag Table:
(Indirect)
Node: Top830
Node: Introduction2908
Node: Motivation3163
Node: StarPU in a Nutshell4246
Node: Codelet and Tasks5984
Node: StarPU Data Management Library7556
Node: Glossary8209
Node: Research Papers10522
Node: Installing StarPU10872
Node: Downloading StarPU11289
Node: Getting Sources11496
Ref: Getting Sources-Footnote-112217
Node: Optional dependencies12434
Node: Configuration of StarPU12907
Node: Generating Makefiles and configuration scripts13198
Node: Running the configuration13745
Node: Building and Installing StarPU14085
Node: Building14328
Node: Sanity Checks14469
Node: Installing14756
Node: Using StarPU15138
Node: Setting flags for compiling and linking applications15433
Ref: Setting flags for compiling and linking applications-Footnote-116553
Node: Running a basic StarPU application16758
Node: Kernel threads started by StarPU17727
Node: Enabling OpenCL18572
Node: Basic Examples19457
Node: Compiling and linking options19851
Node: Hello World20788
Node: Hello World using the C Extension21233
Node: Hello World using StarPU's API22887
Node: Required Headers23286
Node: Defining a Codelet23541
Node: Submitting a Task26104
Node: Execution of Hello World29590
Node: Vector Scaling Using the C Extension29999
Ref: Vector Scaling Using the C Extension-Footnote-133636
Node: Adding an OpenCL Task Implementation33771
Node: Adding a CUDA Task Implementation36833
Node: Vector Scaling Using StarPu's API38869
Node: Source Code of Vector Scaling39458
Node: Execution of Vector Scaling43706
Node: Vector Scaling on an Hybrid CPU/GPU Machine44114
Node: Definition of the CUDA Kernel44634
Node: Definition of the OpenCL Kernel46111
Node: Definition of the Main Code48510
Node: Execution of Hybrid Vector Scaling51748
Node: Advanced Examples53119
Node: Using multiple implementations of a codelet53715
Node: Enabling implementation according to capabilities55201
Node: Task and Worker Profiling58666
Node: Partitioning Data61134
Node: Performance model example63551
Node: Theoretical lower bound on execution time69387
Node: Insert Task Utility72076
Node: Parallel Tasks77357
Node: Debugging83101
Node: The multiformat interface83527
Node: On-GPU rendering86622
Node: More examples87924
Node: Performance optimization89136
Node: Data management89855
Node: Task granularity91944
Node: Task submission92608
Node: Task priorities93167
Node: Task scheduling policy93749
Node: Performance model calibration95981
Node: Task distribution vs Data transfer98873
Node: Data prefetch100033
Node: Power-based scheduling101134
Node: Profiling102513
Node: CUDA-specific optimizations103403
Node: Performance debugging104262
Node: Performance feedback105876
Node: On-line106279
Node: Enabling monitoring106770
Node: Task feedback107684
Node: Codelet feedback108898
Node: Worker feedback109344
Node: Bus feedback110630
Node: StarPU-Top111490
Node: Off-line114277
Node: Generating traces114694
Node: Gantt diagram116069
Node: DAG116884
Node: starpu-top117453
Node: Codelet performance118915
Node: Theoretical lower bound on execution time API120996
Node: Tips and Tricks123012
Node: Per-worker library initialization123299
Node: StarPU MPI support125297
Node: The API126318
Node: Simple Example129875
Node: MPI Insert Task Utility131883
Node: MPI Collective Operations139019
Node: StarPU FFT support141784
Node: C Extensions146298
Ref: C Extensions-Footnote-1147965
Node: Defining Tasks148095
Node: Synchronization and Other Pragmas153162
Node: Registered Data Buffers154112
Node: Conditional Extensions156652
Node: SOCL OpenCL Extensions159445
Node: StarPU Basic API160185
Node: Initialization and Termination161013
Node: Workers' Properties166903
Node: Data Library171693
Node: Introduction to Data Library172184
Node: Basic Data Library API173866
Node: Access registered data from the application180600
Node: Data Interfaces183674
Node: Registering Data183890
Node: Accessing Data Interfaces188533
Node: Accessing Handle189578
Node: Accessing Variable Data Interfaces190436
Node: Accessing Vector Data Interfaces191210
Node: Accessing Matrix Data Interfaces192808
Node: Accessing Block Data Interfaces195211
Node: Accessing BCSR Data Interfaces198134
Node: Accessing CSR Data Interfaces200462
Node: Data Partition202936
Node: Basic API203151
Ref: starpu_data_partition204901
Node: Predefined filter functions207470
Node: Partitioning BCSR Data207972
Node: Partitioning BLAS interface208677
Node: Partitioning Vector Data209380
Node: Partitioning Block Data210874
Node: Codelets and Tasks211291
Ref: starpu_display_codelet_stats233910
Node: Explicit Dependencies234086
Node: Implicit Data Dependencies238701
Node: Performance Model API240552
Ref: struct starpu_perfmodel242086
Node: Profiling API246887
Node: CUDA extensions253355
Node: OpenCL extensions255919
Node: Writing OpenCL kernels256647
Node: Compiling OpenCL kernels258154
Ref: starpu_opencl_load_opencl_from_file259270
Node: Loading OpenCL kernels259753
Node: OpenCL statistics260438
Node: OpenCL utilities261001
Node: Cell extensions265047
Node: Miscellaneous helpers265230
Node: StarPU Advanced API267029
Node: Defining a new data interface267372
Node: Data Interface API267685
Ref: struct starpu_data_interface_ops267907
Node: An example of data interface273427
Node: Multiformat Data Interface277552
Node: Task Bundles279605
Node: Task Lists281288
Node: Using Parallel Tasks283222
Node: Defining a new scheduling policy284849
Node: Scheduling Policy API285283
Node: Source code294441
Node: Expert mode295014
Node: Configuring StarPU295594
Node: Compilation configuration295883
Node: Common configuration296239
Node: Configuring workers296831
Node: Advanced configuration299371
Node: Execution configuration through environment variables302037
Node: Workers302625
Node: STARPU_NCPUS303271
Node: STARPU_NCUDA303696
Node: STARPU_NOPENCL304220
Node: STARPU_NGORDON304492
Node: STARPU_WORKERS_NOBIND304767
Node: STARPU_WORKERS_CPUID305175
Node: STARPU_WORKERS_CUDAID306715
Node: STARPU_WORKERS_OPENCLID307501
Node: Scheduling307947
Node: STARPU_SCHED308434
Node: STARPU_CALIBRATE308807
Node: STARPU_PREFETCH309378
Node: STARPU_SCHED_ALPHA310006
Node: STARPU_SCHED_BETA310454
Node: Misc310879
Node: STARPU_SILENT311368
Node: STARPU_LOGFILENAME311671
Node: STARPU_FXT_PREFIX311969
Node: STARPU_LIMIT_GPU_MEM312318
Node: STARPU_GENERATE_TRACE312938
Node: Full source code for the 'Scaling a Vector' example313321
Node: Main application313681
Node: CPU Kernel318073
Node: CUDA Kernel320510
Node: OpenCL Kernel321666
Node: Invoking the kernel321883
Node: Source of the kernel323941
Node: GNU Free Documentation License324316
Node: Concept Index349525
Node: Function Index350414
Node: Datatype Index385797

End Tag Table
