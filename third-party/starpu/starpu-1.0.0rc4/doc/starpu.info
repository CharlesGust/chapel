This is starpu.info, produced by makeinfo version 4.13 from starpu.texi.

Copyright (C) 2009-2011  Universite' de Bordeaux 1

Copyright (C) 2010, 2011, 2012  Centre National de la Recherche
Scientifique

Copyright (C) 2011, 2012 Institut National de Recherche en Informatique
et Automatique

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".

INFO-DIR-SECTION Development
START-INFO-DIR-ENTRY
* StarPU: (starpu).             StarPU Handbook
END-INFO-DIR-ENTRY


Indirect:
starpu.info-1: 810
starpu.info-2: 294019

Tag Table:
(Indirect)
Node: Top810
Node: Introduction2889
Node: Motivation3144
Node: StarPU in a Nutshell4227
Node: Codelet and Tasks5965
Node: StarPU Data Management Library7537
Node: Glossary8190
Node: Research Papers10503
Node: Installing StarPU10853
Node: Downloading StarPU11270
Node: Getting Sources11477
Ref: Getting Sources-Footnote-112198
Node: Optional dependencies12415
Node: Configuration of StarPU12888
Node: Generating Makefiles and configuration scripts13179
Node: Running the configuration13726
Node: Building and Installing StarPU14066
Node: Building14309
Node: Sanity Checks14450
Node: Installing14737
Node: Using StarPU15119
Node: Setting flags for compiling and linking applications15414
Ref: Setting flags for compiling and linking applications-Footnote-116534
Node: Running a basic StarPU application16739
Node: Kernel threads started by StarPU17708
Node: Enabling OpenCL18553
Node: Basic Examples19438
Node: Compiling and linking options19832
Node: Hello World20974
Node: Hello World using the C Extension21419
Node: Hello World using StarPU's API23085
Node: Required Headers23484
Node: Defining a Codelet23739
Node: Submitting a Task26302
Node: Execution of Hello World29788
Node: Vector Scaling Using the C Extension30197
Ref: Vector Scaling Using the C Extension-Footnote-133842
Node: Adding an OpenCL Task Implementation33977
Node: Adding a CUDA Task Implementation37043
Node: Vector Scaling Using StarPu's API39081
Node: Source Code of Vector Scaling39670
Node: Execution of Vector Scaling43918
Node: Vector Scaling on an Hybrid CPU/GPU Machine44326
Node: Definition of the CUDA Kernel44846
Node: Definition of the OpenCL Kernel46323
Node: Definition of the Main Code48722
Node: Execution of Hybrid Vector Scaling51960
Node: Advanced Examples53331
Node: Using multiple implementations of a codelet53918
Node: Enabling implementation according to capabilities55404
Node: Task and Worker Profiling58869
Node: Partitioning Data61337
Node: Performance model example63754
Node: Theoretical lower bound on execution time69590
Node: Insert Task Utility72279
Node: Data reduction77560
Node: Parallel Tasks80604
Node: Debugging86343
Node: The multiformat interface86771
Node: On-GPU rendering89866
Node: More examples91168
Node: Performance optimization92380
Node: Data management93099
Node: Task granularity95375
Node: Task submission96039
Node: Task priorities96598
Node: Task scheduling policy97180
Node: Performance model calibration99412
Node: Task distribution vs Data transfer102304
Node: Data prefetch103464
Node: Power-based scheduling104565
Node: Profiling105944
Node: CUDA-specific optimizations106834
Node: Performance debugging107693
Node: Performance feedback109307
Node: On-line109710
Node: Enabling monitoring110201
Node: Task feedback111115
Node: Codelet feedback112329
Node: Worker feedback112775
Node: Bus feedback114087
Node: StarPU-Top114947
Ref: StarPU-Top-Footnote-1117773
Node: Off-line117832
Node: Generating traces118249
Node: Gantt diagram119624
Node: DAG120439
Node: starpu-workers-activity121021
Node: Codelet performance122509
Node: Theoretical lower bound on execution time API124590
Node: Tips and Tricks126606
Node: Per-worker library initialization126893
Node: StarPU MPI support128891
Node: The API129912
Node: Simple Example135967
Node: MPI Insert Task Utility137975
Node: MPI Collective Operations145111
Node: StarPU FFT support147876
Node: C Extensions152390
Ref: C Extensions-Footnote-1154057
Node: Defining Tasks154513
Node: Synchronization and Other Pragmas159618
Node: Registered Data Buffers160568
Node: Conditional Extensions163108
Node: SOCL OpenCL Extensions165919
Node: StarPU Basic API166659
Node: Initialization and Termination167487
Node: Workers' Properties174050
Node: Data Library179335
Node: Introduction to Data Library179826
Node: Basic Data Library API181508
Node: Access registered data from the application188422
Node: Data Interfaces191496
Node: Registering Data191712
Node: Accessing Data Interfaces196355
Node: Accessing Handle197400
Node: Accessing Variable Data Interfaces198258
Node: Accessing Vector Data Interfaces199032
Node: Accessing Matrix Data Interfaces200630
Node: Accessing Block Data Interfaces203033
Node: Accessing BCSR Data Interfaces205956
Node: Accessing CSR Data Interfaces208284
Node: Data Partition210758
Node: Basic API210973
Ref: starpu_data_partition212723
Node: Predefined filter functions215292
Node: Partitioning BCSR Data215794
Node: Partitioning BLAS interface216499
Node: Partitioning Vector Data217202
Node: Partitioning Block Data218696
Node: Codelets and Tasks219113
Ref: starpu_display_codelet_stats241970
Node: Explicit Dependencies242146
Node: Implicit Data Dependencies246761
Node: Performance Model API248612
Ref: struct starpu_perfmodel250146
Node: Profiling API255623
Node: CUDA extensions262091
Node: OpenCL extensions264655
Node: Writing OpenCL kernels265383
Node: Compiling OpenCL kernels266890
Ref: starpu_opencl_load_opencl_from_file268006
Node: Loading OpenCL kernels268489
Node: OpenCL statistics269174
Node: OpenCL utilities269737
Node: Cell extensions273783
Node: Miscellaneous helpers273966
Node: StarPU Advanced API275765
Node: Defining a new data interface276108
Node: Data Interface API276421
Ref: struct starpu_data_interface_ops276643
Node: An example of data interface282163
Node: Multiformat Data Interface286288
Node: Task Bundles288341
Node: Task Lists290024
Node: Using Parallel Tasks291958
Node: Defining a new scheduling policy293585
Node: Scheduling Policy API294019
Node: Source code303177
Node: Expert mode303750
Node: Configuring StarPU304330
Node: Compilation configuration304619
Node: Common configuration304975
Node: Configuring workers305567
Node: Advanced configuration308107
Node: Execution configuration through environment variables310773
Node: Workers311361
Node: STARPU_NCPUS312007
Node: STARPU_NCUDA312432
Node: STARPU_NOPENCL312956
Node: STARPU_NGORDON313228
Node: STARPU_WORKERS_NOBIND313503
Node: STARPU_WORKERS_CPUID313911
Node: STARPU_WORKERS_CUDAID315451
Node: STARPU_WORKERS_OPENCLID316237
Node: Scheduling316683
Node: STARPU_SCHED317170
Node: STARPU_CALIBRATE317543
Node: STARPU_PREFETCH318114
Node: STARPU_SCHED_ALPHA318742
Node: STARPU_SCHED_BETA319190
Node: Misc319615
Node: STARPU_SILENT320104
Node: STARPU_LOGFILENAME320407
Node: STARPU_FXT_PREFIX320705
Node: STARPU_LIMIT_GPU_MEM321054
Node: STARPU_GENERATE_TRACE321674
Node: Full source code for the 'Scaling a Vector' example322057
Node: Main application322417
Node: CPU Kernel326809
Node: CUDA Kernel329246
Node: OpenCL Kernel330402
Node: Invoking the kernel330619
Node: Source of the kernel332677
Node: GNU Free Documentation License333052
Node: Concept Index358261
Node: Function Index359150
Node: Datatype Index394752

End Tag Table
